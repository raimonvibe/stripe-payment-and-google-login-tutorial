# Environment Variables Configuration File
# Copy this file to .env and fill in your actual values
# NEVER commit the .env file to version control - it contains sensitive information

# =============================================================================
# STRIPE CONFIGURATION
# =============================================================================
# Get these from your Stripe Dashboard: https://dashboard.stripe.com/apikeys

# Stripe Secret Key (Server-side only)
# This key has full access to your Stripe account - keep it secure!
# Format: sk_test_... (for test mode) or sk_live_... (for live mode)
STRIPE_SECRET_KEY=REPLACE_WITH_YOUR_ACTUAL_STRIPE_SECRET_KEY

# Stripe Publishable Key (Client-side safe)
# This key is safe to expose in your frontend JavaScript
# Format: pk_test_... (for test mode) or pk_live_... (for live mode)
STRIPE_PUBLISHABLE_KEY=REPLACE_WITH_YOUR_ACTUAL_STRIPE_PUBLISHABLE_KEY

# Stripe Webhook Secret (Optional - for webhook verification)
# Get this from your webhook endpoint settings in Stripe Dashboard
# Format: whsec_...
STRIPE_WEBHOOK_SECRET=REPLACE_WITH_YOUR_ACTUAL_WEBHOOK_SECRET

# =============================================================================
# GOOGLE OAUTH CONFIGURATION
# =============================================================================
# Get these from Google Cloud Console: https://console.cloud.google.com/

# Google OAuth Client ID
# Create this in Google Cloud Console > APIs & Services > Credentials
# Format: xxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com
GOOGLE_CLIENT_ID=REPLACE_WITH_YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com

# Google OAuth Client Secret
# This is generated when you create the OAuth client ID
# Format: GOCSPX-xxxxxxxxxxxxxxxxxxxxxxxxxxxx
GOOGLE_CLIENT_SECRET=REPLACE_WITH_YOUR_GOOGLE_CLIENT_SECRET

# =============================================================================
# SESSION CONFIGURATION
# =============================================================================

# Session Secret (Required for secure sessions)
# Generate a random string for this - it's used to sign session cookies
# You can generate one using: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
SESSION_SECRET=REPLACE_WITH_YOUR_RANDOM_SESSION_SECRET

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Port number for the server to listen on
# Default: 3000
# Note: Some hosting platforms (like Heroku) set this automatically
PORT=3000

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. STRIPE SETUP:
#    - Go to https://dashboard.stripe.com/register
#    - Create an account or log in
#    - Go to Developers > API keys
#    - Copy your "Publishable key" and "Secret key"
#    - Paste them above (use test keys for development)

# 2. GOOGLE OAUTH SETUP:
#    - Go to https://console.cloud.google.com/
#    - Create a new project or select existing one
#    - Enable the Google+ API
#    - Go to APIs & Services > Credentials
#    - Click "Create Credentials" > "OAuth client ID"
#    - Choose "Web application"
#    - Add authorized redirect URI: http://localhost:3000/auth/google/callback
#    - Copy the Client ID and Client Secret

# 3. SESSION SECRET:
#    - Generate a random string (at least 32 characters)
#    - You can use: openssl rand -hex 32
#    - Or: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# 4. TESTING:
#    - Use Stripe test card numbers: 4242 4242 4242 4242
#    - Use any future expiry date and any 3-digit CVC
#    - Test with different amounts to see various scenarios

# =============================================================================
# SECURITY NOTES
# =============================================================================

# - Never commit your .env file to version control
# - Never share your secret keys publicly
# - Use test keys during development
# - Rotate your keys regularly in production
# - Use environment variables in production, not .env files
# - Enable webhook signature verification in production
